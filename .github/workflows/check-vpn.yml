name: Check Trojan VPN Status

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 */6 * * *'  # Run setiap 6 jam

jobs:
  vpn-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl
          echo "System dependencies installed"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip cache purge
          pip install -r requirements.txt PySocks || { echo "Failed to install Python dependencies"; exit 1; }
          echo "Python dependencies installed"

      - name: Install Xray
        run: |
          rm -f *.zip *.dat *.md LICENSE xray  # Bersihkan file lama
          wget https://github.com/XTLS/Xray-core/releases/download/v1.8.24/Xray-linux-64.zip || { echo "Failed to download Xray"; exit 1; }
          unzip -o Xray-linux-64.zip || { echo "Failed to unzip Xray"; exit 1; }
          chmod +x xray
          ls -l  # Log isi direktori
          echo "Xray installed: $(./xray --version)"

      - name: Run VPN Check Script
        run: |
          # Ambil IP asli
          ORIGINAL_IP=$(curl -s https://api.ipify.org) || { echo "Failed to get original IP"; exit 1; }
          echo "Original IP: $ORIGINAL_IP"
          echo "ORIGINAL_IP=$ORIGINAL_IP" >> $GITHUB_ENV
          # Log input.txt
          echo "Input URLs:"
          cat input.txt
          python check_vpn.py || { echo "Script failed"; exit 1; }
          echo "Check completed"
          # Log output preview
          echo "Valid URIs preview:"
          head -10 output.txt || echo "No valid URIs"

      - name: Commit output.txt to repo
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          # Stage semua file
          git add .
          git status  # Log untuk debug
          git commit -m "Temporary commit for local changes" || echo "No local changes to commit"
          # Pull dengan rebase
          git pull --rebase origin main || { echo "Failed to pull and rebase"; exit 1; }
          # Commit ulang
          git add .
          git commit -m "Update output.txt with valid Trojan/VMess URIs" || echo "No changes to commit after rebase"
          git push || { echo "Failed to push to repo"; exit 1; }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Report Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vpn-report
          path: |
            vpn_report.txt
            output.txt

      - name: Cleanup
        if: always()
        run: |
          pkill -f xray || true
          rm -f xray* *.dat *.md LICENSE config_*.json
          echo "Cleanup completed"
